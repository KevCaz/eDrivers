% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/importDrivers.R
\name{importDrivers}
\alias{importDrivers}
\title{Import driver layers from memory}
\usage{
importDrivers(drivers, input = NULL, brick = F)
}
\arguments{
\item{drivers}{a vector of characters indicating the queried drivers as keys
or file names. Consult list of drivers using the `fetchList()` function to
identify desired drivers and use `FileName` or `Key` column to identify proper
spelling for queries.}

\item{input}{path to disk location of loaded drivers. Default is `null`, which
uses the current working directory}

\item{brick}{a logical. Should a `eDriversBrick` object be returned, which
a single `RasterBrick` object containing all drivers queried. See
`brickDrivers()` for further details.}
}
\value{
if brick is `FALSE`, `eDrivers` objects are returned, one for each
driver queried, containing a list with:
 [[1]]: Spatial data as a `RasterLayer`
 [[2]]: Metadata as a `yaml`
 [[3]]: Sources as a `BibEntry`
if brick is `TRUE`, an `eDriversBrick` object containing a list with:
 [[1]]: RasterBrick` with drivers queried
 [[2]]: list containing metadata for each driver queried
 [[3]]: list containing sources for each driver queried
}
\description{
Imports driver layers with accompanying attributes (metadata and source) for
a selection of drivers
}
\examples{
\donttest{
# Example 1
res1 <- importDrivers(drivers = c('SST+','SST-'))
res1
summary(res1)
plot(res1)

Example 2
res2 <- importDrivers(drivers = c('SST+','SST-'), brick = T)
res1
summary(res1)
plot(res1)
}
}
